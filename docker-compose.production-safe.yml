version: '3.8'

services:
  # Base de datos PostgreSQL con volumen persistente
  database:
    image: postgres:15
    environment:
      POSTGRES_DB: invitaciones_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
    volumes:
      - postgres_production_data:/var/lib/postgresql/data  # VOLUMEN PERSISTENTE
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.simple
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD:-password123}@database:5432/invitaciones_db
      - SECRET_KEY=${SECRET_KEY:-change_in_production}
      - PYTHONPATH=/app
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./static:/app/static
      - backend_uploads:/app/uploads  # VOLUMEN PERSISTENTE para archivos
    networks:
      - app-network
    restart: unless-stopped

  # Frontend con Nginx
  frontend:
    image: nginx:alpine
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./static:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    restart: unless-stopped

# VOLÃšMENES PERSISTENTES - NO SE BORRAN
volumes:
  postgres_production_data:    # Base de datos PostgreSQL
  backend_uploads:            # Archivos subidos

networks:
  app-network:
    driver: bridge